services:
  flaskapp:
    image: danmatheny/fullstack-flaskapp-scaffold
    # build:
    #   context: ./backend
    # image: flaskapp-prod
    depends_on:
      - mysqldb
    restart: unless-stopped
    expose:
      - '5000'
    networks:
      - app-network
    environment:
      SESSION_KEY: ${SESSION_KEY}
      MYSQL_HOST: mysqldb
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      S3_URL: minio:9000
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}

  nginx:
    image: danmatheny/fullstack-flaskapp-scaffold-nginx
    # build:
    #   context: .
    #   dockerfile: ./nginx/Dockerfile
    # image: flaskapp-nginx-prod
    restart: unless-stopped
    ports:
      - ${PORT}:80
    networks:
      - app-network

  minio:
    image: minio/minio
    restart: unless-stopped
    expose:
      - '9000'
    volumes:
      - minio-storage:/data
    networks:
      - app-network
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command: ['server', '/data']

  mysqldb:
    image: mariadb
    restart: unless-stopped
    volumes:
      - mysql-data:/var/lib/mysql
      - mysql-config:/etc/mysql
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    command: --default-authentication-plugin=mysql_native_password

volumes:
  mysql-data:
  mysql-config:
  minio-storage:

networks:
  app-network:
